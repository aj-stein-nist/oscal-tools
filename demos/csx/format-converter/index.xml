<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Catalog Converters on OSCAL Tools</title><link>https://pages.nist.gov/oscal-tools/demos/csx/format-converter/</link><description>Recent content in Catalog Converters on OSCAL Tools</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://pages.nist.gov/oscal-tools/demos/csx/format-converter/index.xml" rel="self" type="application/rss+xml"/><item><title>OSCAL Catalog JSON-to-XML Converter</title><link>https://pages.nist.gov/oscal-tools/demos/csx/format-converter/fromjson/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pages.nist.gov/oscal-tools/demos/csx/format-converter/fromjson/</guid><description>function makeXMLforJSON(jsontext) { SaxonJS.transform({ stylesheetLocation: "oscal-catalog_JSONtoXML_converter.sef.json", initialTemplate: "make-xml", stylesheetParams: { "oscal-data": jsontext } },"async") } function dropFileText(fileSet,whereID) { for (const eachFile of fileSet) { let where = document.getElementById(whereID) let frdr = new FileReader(); frdr.onload = function () { where.value = frdr.result; makeXMLforJSON(frdr.result) } frdr.readAsText(eachFile); } } /* reads result off of pane, provides it to a download link and clicks it */ function offerDownload(fileName) { var contents = document.</description></item><item><title>OSCAL Catalog XML-to-JSON Converter</title><link>https://pages.nist.gov/oscal-tools/demos/csx/format-converter/fromxml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pages.nist.gov/oscal-tools/demos/csx/format-converter/fromxml/</guid><description>function makeJSONforXML(xmltext) { SaxonJS.transform({ stylesheetLocation: "oscal-catalog_XMLtoJSON_converter.sef.json", initialTemplate: "make-json", stylesheetParams: { "oscal-data": xmltext } },"async") } function dropFileText(fileSet,whereID) { for (const eachFile of fileSet) { let where = document.getElementById(whereID) let frdr = new FileReader(); frdr.onload = function () { where.value = frdr.result; makeJSONforXML(frdr.result) } frdr.readAsText(eachFile); } } /* reads result off of pane, provides it to a download link and clicks it */ function offerDownload(fileName) { var contents = document.</description></item></channel></rss>